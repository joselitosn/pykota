.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.36.
.TH PKNOTIFY "1" "mars 2006" "C@LL - Conseil Internet & Logiciels Libres" "User Commands"
.SH NOM
pknotify \- page de manuel de pknotify 1.24beta_unofficial
.SH DESCRIPTION
pknotify v1.24beta_unofficial (c) 2003, 2004, 2005, 2006 Jerome Alet \- alet@librelogiciel.com
.PP
Notifies or ask questions to end users who launched the PyKotIcon application.
.PP
command line usage :
.TP
pknotify
[options]  [arguments]
.PP
options :
.TP
\fB\-v\fR | \fB\-\-version\fR
Prints pkbanner's version number then exits.
.TP
\fB\-h\fR | \fB\-\-help\fR
Prints this message then exits.
.TP
\fB\-d\fR | \fB\-\-destination\fR h[:p]
Sets the destination hostname and optional
port onto which contact the remote PyKotIcon
application. This option is mandatory.
When not specified, the port defaults to 7654.
.TP
\fB\-a\fR | \fB\-\-ask\fR
Tells pknotify to ask something to the end
user. Then pknotify will output the result.
.TP
\fB\-C\fR | \fB\-\-checkauth\fR
When \fB\-\-ask\fR is used and both an 'username' and a
\&'password' are asked to the end user, then
pknotify will try to authenticate the user
through PAM. If authentified, this program
will print "AUTH=YES", else "AUTH=NO".
If a field is missing, "AUTH=IMPOSSIBLE" will
be printed. If the user is authenticated, then
"USERNAME=xxxx" will be printed as well.
.TP
\fB\-c\fR | \fB\-\-confirm\fR
Tells pknotify to ask for either a confirmation
or abortion.
.TP
\fB\-D\fR | \fB\-\-denyafter\fR N
With \fB\-\-checkauth\fR above, makes pknotify loop
up to N times if the password is incorrect.
After having reached the limit, "DENY" will
be printed, which effectively rejects the job.
The default value of N is 1, meaning the job
is denied after the first unsuccessful try.
.TP
\fB\-n\fR | \fB\-\-notify\fR
Tells pknotify to send an informational message
message to the end user.
.TP
\fB\-q\fR | \fB\-\-quit\fR
Tells pknotify to send a message asking the
PyKotIcon application to exit. This option can
be combined with the other ones to make PyKotIcon
exit after having sent the answer from the dialog.
.TP
\fB\-t\fR | \fB\-\-timeout\fR T
Tells pknotify to ignore the end user's answer if
it comes pas T seconds after the dialog box being
opened. The default value is 0 seconds, which
tells pknotify to wait indefinitely.
Use this option to avoid having an user who
leaved his computer stall a whole print queue.
.IP
You MUST specify either \fB\-\-ask\fR, \fB\-\-confirm\fR, \fB\-\-notify\fR or \fB\-\-quit\fR.
.IP
arguments :
.HP
\fB\-a\fR | \fB\-\-ask\fR : Several arguments are accepted, or the form
.IP
"label:varname:defaultvalue". The result will
be printed to stdout in the following format :
VAR1NAME=VAR1VALUE
VAR2NAME=VAR2VALUE
\&...
If the dialog was cancelled, nothing will be
printed. If one of the varname is 'password'
then this field is asked as a password (you won't
see what you type in), and is NOT printed. Although
it is not printed, it will be used to check if
authentication is valid if you specify \fB\-\-checkauth\fR.
.TP
\fB\-c\fR | \fB\-\-confirm\fR : A single argument is expected, representing the
message to display. If the dialog is confirmed
then pknotify will print OK, else CANCEL.
.TP
\fB\-n\fR | \fB\-\-notify\fR : A single argument is expected, representing the
message to display. In this case pknotify will
always print OK.
.PP
examples :
.IP
pknotify \fB\-d\fR client:7654 \fB\-\-confirm\fR "This job costs :
.PP
10 credits !"
.IP
Would display the cost of a print job and asks for confirmation.
.IP
pknotify \fB\-\-destination\fR $PYKOTAJOBORIGINATINGHOSTNAME:7654 \e
.IP
\fB\-\-checkauth\fR \fB\-\-ask\fR "Your name:username:" "Your password:password:"
.IP
Asks an username and password, and checks if they are valid.
NB : The PYKOTAJOBORIGINATINGHOSTNAME environment variable is
only set if you launch pknotify from cupspykota through a directive
in ~pykota/pykota.conf
.IP
The TCP port you'll use must be reachable on the client from the
print server.
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
.PP
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110\-1301, USA.
.PP
Raporty o b³êdach proszê kierowaæ do : Jerome Alet \- alet@librelogiciel.com
