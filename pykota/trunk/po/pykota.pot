# PyKota
#
# PyKota : Print Quotas for CUPS and LPRng
#
# (c) 2003, 2004, 2005 Jerome Alet <alet@librelogiciel.com>
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# $Id$
#
# PyKota translation master file.
# Copyright (c) 2003, 2004, 2005 Conseil Internet & Logiciels Libres
# Jerome Alet <alet@librelogiciel.com>, 2003, 2004, 2005.
#
msgid ""
msgstr ""
"Project-Id-Version: PyKota v1.23\n"
"Report-Msgid-Bugs-To: alet@librelogiciel.com\n"
"POT-Creation-Date: 2004-11-25 10:16+0100\n"
"PO-Revision-Date: 2005-09-24 14:36:00+0100\n"
"Last-Translator: Jerome Alet <alet@librelogiciel.com>\n"
"Language-Team: English <alet@librelogiciel.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=ISO-8859-15\n"
"Content-Transfer-Encoding: 8bit\n"

#, python-format
msgid ""
"autopykota v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"A tool to automate user account creation and initial balance setting.\n"
"\n"
"THIS TOOL MUST NOT BE USED IF YOU WANT TO LIMIT YOUR USERS BY PAGE QUOTA !\n"
"\n"
"command line usage :\n"
"\n"
"  THIS TOOL MUST NOT BE USED FROM THE COMMAND LINE BUT ONLY AS PART\n"
"  OF AN external policy IN pykota.conf\n"
"  \n"
"  autopykota { -i | --initbalance value } \n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints autopykota's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -i | --initbalance b Sets the user's account initial balance value to b.\n"
"                       If the user already exists, actual balance is left\n"
"                       unmodified. If unset, the default value is 0.\n"
msgstr ""

#, python-format
msgid "SIGTERM received, job %s cancelled."
msgstr ""

msgid "You are not allowed to print at this time."
msgstr ""

#, python-format
msgid "Unable to precompute the job's size with the generic PDL analyzer : %s"
msgstr ""

#, python-format
msgid "Banner generator %s exit code is %s"
msgstr ""

msgid "Banner won't be printed : maximum number of deny banners reached."
msgstr ""

#, python-format
msgid "Beware : computed job size (%s) != precomputed job size (%s)"
msgstr ""

msgid ""
"The job size will be trusted anyway according to the 'trustjobsize' directive"
msgstr ""

#, python-format
msgid ""
"The job size will be trusted because it is inferior to the 'trustjobsize' "
"directive's limit %s"
msgstr ""

#, python-format
msgid ""
"The job size will be modified according to the 'trustjobsize' directive : %s"
msgstr ""

#, python-format
msgid ""
"Printer %s not registered in the PyKota system, applying external policy (%"
"s) for printer %s"
msgstr ""

#, python-format
msgid ""
"User %s not registered in the PyKota system, applying external policy (%s) "
"for printer %s"
msgstr ""

#, python-format
msgid ""
"User %s doesn't have quota on printer %s in the PyKota system, applying "
"external policy (%s) for printer %s"
msgstr ""

#, python-format
msgid ""
"External policy %s for printer %s produced an error. Job rejected. Please "
"check PyKota's configuration files."
msgstr ""

#, python-format
msgid ""
"Printer %s not registered in the PyKota system, applying default policy (%s)"
msgstr ""

#, python-format
msgid ""
"User %s not registered in the PyKota system, applying default policy (%s) "
"for printer %s"
msgstr ""

#, python-format
msgid ""
"User %s doesn't have quota on printer %s in the PyKota system, applying "
"default policy (%s)"
msgstr ""

#, python-format
msgid ""
"Printer %s still not registered in the PyKota system, job will be rejected"
msgstr ""

#, python-format
msgid ""
"User %s still not registered in the PyKota system, job will be rejected on "
"printer %s"
msgstr ""

#, python-format
msgid ""
"User %s still doesn't have quota on printer %s in the PyKota system, job "
"will be rejected"
msgstr ""

msgid "Job is a dupe"
msgstr ""

msgid "Printing is denied by configuration"
msgstr ""

#, python-format
msgid "Duplicate print jobs are not allowed on printer %s."
msgstr ""

msgid "Subprocess denied printing of a dupe"
msgstr ""

#, python-format
msgid "Duplicate print jobs are not allowed on printer %s at this time."
msgstr ""

msgid "Subprocess allowed printing of a dupe"
msgstr ""

#, python-format
msgid ""
"\n"
"\n"
"Your system administrator :\n"
"\n"
"\t%s - <%s>\n"
msgstr ""

#, python-format
msgid "Impossible to connect to SMTP server : %s"
msgstr ""

msgid "Print Quota"
msgstr ""

#, python-format
msgid "Impossible to send mail to %s, error %s : %s"
msgstr ""

msgid "Job contains no data. Printing is denied."
msgstr ""

msgid "Job allowed by printer policy. No accounting will be done."
msgstr ""

#, python-format
msgid "Invalid policy %s for printer %s"
msgstr ""

#, python-format
msgid "Precomputed job size (%s pages) too large for printer %s."
msgstr ""

#, python-format
msgid "You are not allowed to print so many pages on printer %s at this time."
msgstr ""

#, python-format
msgid "User %s is not allowed to print at this time."
msgstr ""

msgid "Your account settings forbid you to print at this time."
msgstr ""

#, python-format
msgid "Print Quota exceeded for user %s on printer %s"
msgstr ""

#, python-format
msgid "Print Quota low for user %s on printer %s"
msgstr ""

msgid "Job denied, no accounting will be done."
msgstr ""

msgid "Job accounting begins."
msgstr ""

msgid "Job denied, no accounting has been done."
msgstr ""

msgid "Job accounting ends."
msgstr ""

msgid "Job size forced to 0 because printing is denied."
msgstr ""

#, python-format
msgid "Job size : %i"
msgstr ""

#, python-format
msgid "User %s's quota on printer %s won't be modified"
msgstr ""

#, python-format
msgid "Updating user %s's quota on printer %s"
msgstr ""

msgid "Job added to history."
msgstr ""

#, python-format
msgid "Billing code %s was updated."
msgstr ""

#, python-format
msgid ""
"dumpykota v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"Dumps PyKota database's content.\n"
"\n"
"command line usage :\n"
"\n"
"  dumpykota [options] [filterexpr]\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints dumpykota's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -d | --data type     Dumps 'type' datas. Allowed types are :\n"
"                       \n"
"                         - history : dumps the jobs history.\n"
"                         - users : dumps users.\n"
"                         - groups : dumps user groups.\n"
"                         - printers : dump printers.\n"
"                         - upquotas : dump user quotas.\n"
"                         - gpquotas : dump user groups quotas.\n"
"                         - payments : dumps user payments.\n"
"                         - pmembers : dumps printer groups members.\n"
"                         - umembers : dumps user groups members.\n"
"                         - billingcodes : dumps billing codes.\n"
"                         \n"
"                       NB : the -d | --data command line option   \n"
"                       is MANDATORY.\n"
"  \n"
"  -f | --format fmt    Dumps datas in the 'fmt' format. When not specified,\n"
"                       the format is to dump datas in the csv format (comma\n"
"                       separated values). All data dumped is between double\n"
"                       quotes. Allowed formats are :\n"
"                       \n"
"                         - csv : separate datas with commas\n"
"                         - ssv : separate datas with semicolons\n"
"                         - tsv : separate datas with tabs\n"
"                         - xml : dump data as XML\n"
"                         - cups : dump datas in CUPS' page_log format :\n"
"                                  ONLY AVAILABLE WITH --data history\n"
"                         \n"
"  -o | --output fname  All datas will be dumped to the file instead of\n"
"                       to the standard output. The special '-' filename\n"
"                       is the default value and means stdout.\n"
"                       WARNING : existing files are truncated !\n"
"\n"
"  -s | --sum           Summarize the selected datas.\n"
"                           ONLY AVAILABLE WITH --data history or payments\n"
"\n"
"  Use the filter expressions to extract only parts of the \n"
"  datas. Allowed filters are of the form :\n"
"                \n"
"         key=value\n"
"                         \n"
"  Allowed keys for now are :  \n"
"                       \n"
"         username       User's name\n"
"         groupname      Users group's name\n"
"         printername    Printer's name\n"
"         pgroupname     Printers group's name\n"
"         hostname       Client's hostname\n"
"         billingcode    Job's billing code\n"
"         start          Job's date of printing\n"
"         end            Job's date of printing\n"
"         \n"
"  Contrary to other PyKota management tools, wildcard characters are not \n"
"  expanded, so you can't use them.\n"
"  \n"
"  NB : not all keys are allowed for each data type, so the result may be \n"
"  empty if you use a key not available for a particular data type.\n"
"  \n"
"Examples :\n"
"\n"
"  $ dumpykota --data history --format csv >myfile.csv\n"
"  \n"
"  This dumps the history in a comma separated values file, for possible\n"
"  use in a spreadsheet.\n"
"  \n"
"  $ dumpykota --data users --format xml -o users.xml\n"
"  \n"
"  Dumps all users datas to the users.xml file.\n"
"  \n"
"  $ dumpykota --data history printername=HP2100 username=jerome\n"
"  \n"
"  Dumps the job history for user jerome on printer HP2100 only.\n"
"  \n"
"  $ dumpykota --data history start=200503 end=20050730234615\n"
"  \n"
"  Dumps all jobs printed between March 1st 2005 at midnight and\n"
"  July 30th 2005 at 23 hours 46 minutes and 15 secondes included.\n"
msgstr ""

msgid "The -d | --data command line option is mandatory, see help."
msgstr ""

#, python-format
msgid ""
"edpykota v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"A Print Quota editor for PyKota.\n"
"\n"
"command line usage :\n"
"\n"
"  edpykota [options] user1 user2 ... userN\n"
"  \n"
"  edpykota [options] group1 group2 ... groupN\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints edpykota's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -a | --add           Adds users and/or printers if they don't \n"
"                       exist on the Quota Storage Server.\n"
"                       \n"
"  -d | --delete        Deletes users/groups from the quota storage.\n"
"                       Printers are never deleted.\n"
"                       \n"
"  -c | --charge p[,j]  Sets the price per page and per job to charge\n"
"                       for a particular printer. Job price is optional.\n"
"                       If both are to be set, separate them with a comma.\n"
"                       Floating point values are allowed.\n"
"                       \n"
"  -o | --overcharge f  Sets the overcharging factor applied to the user \n"
"                       when computing the cost of a print job. Positive or \n"
"                       negative floating point values are allowed,\n"
"                       this allows you to do some really creative\n"
"                       things like giving money to an user whenever\n"
"                       he prints. The number of pages in a print job\n"
"                       is not modified by this coefficient, only the\n"
"                       cost of the job for a particular user.\n"
"                       Only users have a coefficient.\n"
"  \n"
"  -i | --ingroups g1[,g2...]  Puts the users into each of the groups\n"
"                              listed, separated by commas. The groups\n"
"                              must already exist in the Quota Storage.\n"
"  \n"
"  -u | --users         Edit users print quotas, this is the default.\n"
"  \n"
"  -P | --printer p     Edit quotas on printer p only. Actually p can\n"
"                       use wildcards characters to select only\n"
"                       some printers. The default value is *, meaning\n"
"                       all printers. \n"
"                       You can specify several names or wildcards, \n"
"                       by separating them with commas.\n"
"  \n"
"  -G | --pgroups pg1[,pg2...] Adds the printer(s) to the printer groups\n"
"                       pg1, pg2, etc... which must already exist.\n"
"                       A printer group is just like a normal printer,\n"
"                       only that it is usually unknown from the printing\n"
"                       system. Create printer groups exactly the same\n"
"                       way that you create printers, then add other \n"
"                       printers to them with this option.\n"
"                       Accounting is done on a printer and on all\n"
"                       the printer groups it belongs to, quota checking\n"
"                       is done on a printer and on all the printer groups\n"
"                       it belongs to.\n"
"  \n"
"  -g | --groups        Edit users groups print quotas instead of users.\n"
"                          \n"
"  -p | --prototype u|g Uses user u or group g as a prototype to set\n"
"                       print quotas\n"
"                       \n"
"  -n | --noquota       Sets both soft and hard limits to None for a\n"
"                       particular print quota entry.\n"
"                       This is NOT the same as --limitby noquota\n"
"                       which acts on ALL print quota entries for a\n"
"                       particular user.\n"
"  \n"
"  -r | --reset         Resets the actual page counter for the user\n"
"                       or group to zero on the specified printers. \n"
"                       The life time page counter is kept unchanged.\n"
"                       \n"
"  -R | --hardreset     Resets the actual and life time page counters\n"
"                       for the user or group to zero on the specified \n"
"                       printers. This is a shortcut for '--used 0'.\n"
"                       \n"
"  -l | --limitby l     Choose if the user/group is limited in "
"printing                     \n"
"                       by its account balance or by its page quota.\n"
"                       The default value is 'quota'. Allowed values\n"
"                       are 'quota' 'balance' 'noquota' 'noprint' \n"
"                       and 'nochange' :\n"
"                       \n"
"                         - quota : limit by number of pages per printer.\n"
"                         - balance : limit by number of credits in account.\n"
"                         - noquota : no limit, accounting still done.\n"
"                         - nochange : no limit, accounting not done. \n"
"                         - noprint : printing is denied. \n"
"                       NB : nochange and noprint are not supported for "
"groups.\n"
"                       \n"
"  -b | --balance b     Sets the user's account balance to "
"b.                     \n"
"                       Account balance may be increase or decreased\n"
"                       if b is prefixed with + or -.\n"
"                       WARNING : when decreasing account balance,\n"
"                       the total paid so far by the user is decreased\n"
"                       too.\n"
"                       Groups don't have a real balance, but the\n"
"                       sum of their users' account balance.\n"
"                       \n"
"  -C | --comment txt   Defines some informational text to be associated\n"
"                       with a change to an user's account balance.\n"
"                       Only meaningful if -b | --balance is also used.\n"
"                       \n"
"  -S | --softlimit sl  Sets the quota soft limit to sl "
"pages.                       \n"
"  \n"
"  -H | --hardlimit hl  Sets the quota hard limit to hl pages.\n"
"  \n"
"  -I | --increase v    Increase both Soft and Hard limits by the value\n"
"                       of v. You can prefix v with + or -, if no sign is\n"
"                       used, + is assumed.\n"
"\n"
"  -U | --used usage    Sets the pagecounters for the user to usage pages;\n"
"                       useful for migrating users from a different system\n"
"                       where they have already used some pages. Actual\n"
"                       and Life Time page counters may be increased or "
"decreased\n"
"                       if usage is prefixed with + or -.\n"
"                       WARNING : BOTH page counters are modified in all "
"cases,\n"
"                       so be careful.\n"
"                       NB : if 'usage' equals '0', then the action taken is\n"
"                       the same as if --hardreset was used.\n"
"\n"
"  user1 through userN and group1 through groupN can use wildcards\n"
"  if the --add option is not set.\n"
"  \n"
"examples :                              \n"
"\n"
"  $ edpykota --add -p jerome john paul george ringo/ringo@example.com\n"
"  \n"
"  This will add users john, paul, george and ringo to the quota\n"
"  database, and set their print quotas to the same values than user \n"
"  jerome. User jerome must already exist.\n"
"  User ringo's email address will also be set to 'ringo@example.com'\n"
"  \n"
"  $ edpykota --printer lp -S 50 -H 60 jerome\n"
"  \n"
"  This will set jerome's print quota on the lp printer to a soft limit\n"
"  of 50 pages, and a hard limit of 60 pages. If either user jerome or\n"
"  printer lp doesn't exist on the Quota Storage Server then nothing is "
"done.\n"
"\n"
"  $ edpykota --add --printer lp --ingroups coders,it -S 50 -H 60 jerome\n"
"  \n"
"  Same as above, but if either user jerome or printer lp doesn't exist \n"
"  on the Quota Storage Server they are automatically added. Also\n"
"  user jerome is put into the groups \"coders\" and \"it\" which must\n"
"  already exist in the Quota Storage.\n"
"            \n"
"  $ edpykota -g -S 500 -H 550 financial support            \n"
"  \n"
"  This will set print quota soft limit to 500 pages and hard limit\n"
"  to 550 pages for groups financial and support on all printers.\n"
"  \n"
"  $ edpykota --reset jerome \"jo*\"\n"
"  \n"
"  This will reset jerome's page counter to zero on all printers, as\n"
"  well as every user whose name begins with 'jo'.\n"
"  Their life time page counter on each printer will be kept unchanged.\n"
"  You can also reset the life time page counters by using the\n"
"  --hardreset | -R command line option.\n"
"  \n"
"  $ edpykota --printer hpcolor --noquota jerome\n"
"  \n"
"  This will tell PyKota to not limit jerome when printing on the \n"
"  hpcolor printer. All his jobs will be allowed on this printer, but \n"
"  accounting of the pages he prints will still be kept.\n"
"  Print Quotas for jerome on other printers are unchanged.\n"
"  \n"
"  $ edpykota --limitby balance jerome\n"
"  \n"
"  This will tell PyKota to limit jerome by his account's balance\n"
"  when printing.\n"
"  \n"
"  $ edpykota --balance +10.0 jerome\n"
"  \n"
"  This will increase jerome's account balance by 10.0 (in your\n"
"  own currency). You can decrease the account balance with a\n"
"  dash prefix, and set it to a fixed amount with no prefix.\n"
"  \n"
"  $ edpykota --delete jerome rachel\n"
"  \n"
"  This will completely delete jerome and rachel from the Quota Storage\n"
"  database. All their quotas and jobs will be deleted too.\n"
"  \n"
"  $ edpykota --printer lp --charge 0.1\n"
"  \n"
"  This will set the page price for printer lp to 0.1. Job price\n"
"  will not be changed.\n"
"  \n"
"  $ edpykota --printer hplj1,hplj2 --pgroups Laser,HP\n"
"  \n"
"  This will put printers hplj1 and hplj2 in printers groups Laser and HP.\n"
"  When printing either on hplj1 or hplj2, print quota will also be \n"
"  checked and accounted for on virtual printers Laser and HP.\n"
"  \n"
"  $ edpykota --overcharge 2.5 poorstudent\n"
"  \n"
"  This will overcharge the poorstudent user by a factor of 2.5.\n"
"  \n"
"  $ edpykota --overcharge -1 jerome\n"
"  \n"
"  User jerome will actually earn money whenever he prints.\n"
"  \n"
"  $ edpykota --overcharge 0 boss\n"
"  \n"
"  User boss can print at will, it won't cost him anything because the\n"
"  cost of each print job will be multiplied by zero before charging\n"
"  his account.\n"
msgstr ""

msgid "You're not allowed to use this command."
msgstr ""

#, python-format
msgid "Invalid limitby value %s"
msgstr ""

#, python-format
msgid "Invalid used value %s."
msgstr ""

#, python-format
msgid "Invalid increase value %s."
msgstr ""

#, python-format
msgid "Invalid softlimit value %s."
msgstr ""

#, python-format
msgid "Invalid hardlimit value %s."
msgstr ""

#, python-format
msgid "Hard limit %i is less than soft limit %i, values will be exchanged."
msgstr ""

#, python-format
msgid "Invalid overcharge value %s"
msgstr ""

#, python-format
msgid "Invalid balance value %s"
msgstr ""

#, python-format
msgid "Invalid charge amount value %s"
msgstr ""

#, python-format
msgid "Impossible to add printer %s"
msgstr ""

#, python-format
msgid "Invalid printer name %s"
msgstr ""

#, python-format
msgid "There's no printer matching %s"
msgstr ""

msgid "You have to pass user or group names on the command line"
msgstr ""

#, python-format
msgid "Prototype object %s not found in Quota Storage."
msgstr ""

#, python-format
msgid "Prototype %s not found in Quota Storage for printer %s."
msgstr ""

#, python-format
msgid "Undefined hard limit set to soft limit (%s) on printer %s."
msgstr ""

#, python-format
msgid "Undefined soft limit set to hard limit (%s) on printer %s."
msgstr ""

#, python-format
msgid "Invalid email address %s"
msgstr ""

#, python-format
msgid "Unknown group %s"
msgstr ""

#, python-format
msgid "Unknown user %s"
msgstr ""

#, python-format
msgid "Invalid group name %s"
msgstr ""

#, python-format
msgid "Invalid user name %s"
msgstr ""

#, python-format
msgid "Quota not found for object %s on printer %s."
msgstr ""

#, python-format
msgid "You can't increase limits by %s when no limit is set."
msgstr ""

msgid "You can't set negative limits."
msgstr ""

#, python-format
msgid "Group %s not found in the PyKota Storage."
msgstr ""

#, python-format
msgid "Nonexistent user %s or missing print quota entry."
msgstr ""

#, python-format
msgid "Nonexistent group %s or missing print quota entry."
msgstr ""

msgid "incompatible options, see help."
msgstr ""

#, python-format
msgid ""
"repykota v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"Generates print quota reports.\n"
"\n"
"command line usage :\n"
"\n"
"  repykota [options] \n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints repykota's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -u | --users         Generates a report on users quota, this is \n"
"                       the default.\n"
"  \n"
"  -g | --groups        Generates a report on group quota instead of users.\n"
"  \n"
"  -i | --ingroups g1[,g2...]  Only lists users who are members of these\n"
"                              groups. Reserved to PyKota Administrators.\n"
"  \n"
"  -P | --printer p     Report quotas on this printer only. Actually p can\n"
"                       use wildcards characters to select only\n"
"                       some printers. The default value is *, meaning\n"
"                       all printers.\n"
"                       You can specify several names or wildcards, \n"
"                       by separating them with commas.\n"
"  \n"
"examples :                              \n"
"\n"
"  $ repykota --printer lp\n"
"  \n"
"  This will print the quota status for all users who use the lp printer.\n"
"\n"
"  $ repykota \n"
"  \n"
"  This will print the quota status for all users on all printers.\n"
"  \n"
"  $ repykota --printer \"laser*,*pson\" jerome \"jo*\"\n"
"  \n"
"  This will print the quota status for user jerome and all users\n"
"  whose name begins with \"jo\" on all printers which name begins\n"
"  with \"laser\" or ends with \"pson\".\n"
"  \n"
"  If launched by an user who is not a PyKota administrator, additionnal\n"
"  arguments representing users or groups names are ignored, and only the\n"
"  current user/group is reported.\n"
msgstr ""

msgid "Option --ingroups is reserved to PyKota Administrators."
msgstr ""

#, python-format
msgid ""
"warnpykota v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"Sends mail to users over print quota.\n"
"\n"
"command line usage :\n"
"\n"
"  warnpykota  [options]  [names]\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints warnpykota's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -u | --users         Warns users over their print quota, this is the \n"
"                       default.\n"
"  \n"
"  -g | --groups        Warns users whose groups quota are over limit.\n"
"  \n"
"  -P | --printer p     Verify quotas on this printer only. Actually p can\n"
"                       use wildcards characters to select only\n"
"                       some printers. The default value is *, meaning\n"
"                       all printers.\n"
"                       You can specify several names or wildcards, \n"
"                       by separating them with commas.\n"
"  \n"
"examples :                              \n"
"\n"
"  $ warnpykota --printer lp\n"
"  \n"
"  This will warn all users of the lp printer who have exceeded their\n"
"  print quota.\n"
"\n"
"  $ warnpykota \n"
"  \n"
"  This will warn all users  who have exceeded their print quota on\n"
"  any printer.\n"
"\n"
"  $ warnpykota --groups --printer \"laserjet*\" \"dev*\"\n"
"  \n"
"  This will warn all users of groups which names begins with \"dev\" and\n"
"  who have exceeded their print quota on any printer which name begins \n"
"  with \"laserjet\"\n"
"  \n"
"  If launched by an user who is not a PyKota administrator, additionnal\n"
"  arguments representing users or groups names are ignored, and only the\n"
"  current user/group is reported.\n"
msgstr ""

#, python-format
msgid ""
"pkbanner v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"Generates banners.\n"
"\n"
"command line usage :\n"
"\n"
"  pkbanner  [options]  [more info]\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints pkbanner's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -l | --logo img      Use the image as the banner's logo. The logo will\n"
"                       be drawn at the center top of the page. The default\n"
"                       logo is /usr/share/pykota/logos/pykota.jpeg\n"
"                       \n"
"  -p | --pagesize sz   Sets sz as the page size. Most well known\n"
"                       page sizes are recognized, like 'A4' or 'Letter'\n"
"                       to name a few. The default size is A4.\n"
"  \n"
"  -s | --savetoner s   Sets the text luminosity factor to s%%. This can be \n"
"                       used to save toner. The default value is 0, which\n"
"                       means that no toner saving will be done.\n"
"  \n"
"  -u | --url u         Uses u as an url to be written at the bottom of \n"
"                       the banner page. The default url is :\n"
"                       http://www.librelogiciel.com/software/\n"
"  \n"
"examples :                              \n"
"\n"
"  Using pkbanner directly from the command line is not recommended,\n"
"  excepted for testing purposes. You should use pkbanner in the\n"
"  'startingbanner' or 'endingbanner' directives in pykota.conf\n"
"  \n"
"    startingbanner: /usr/bin/pkbanner --logo=\"\" --savetoner=75\n"
"  \n"
"      With such a setting in pykota.conf, all print jobs will be \n"
"      prefixed with an A4 banner with no logo, and text luminosity will\n"
"      be increased by 75%%. The PostScript output will be directly sent\n"
"      to your printer.\n"
"      \n"
"  You'll find more examples in the sample configuration file included    \n"
"  in PyKota.\n"
msgstr ""

msgid "Unknown"
msgstr ""

msgid "Username"
msgstr ""

msgid "More Info"
msgstr ""

msgid "Job"
msgstr ""

msgid "Date"
msgstr ""

msgid "Allowed"
msgstr ""

msgid "Denied"
msgstr ""

msgid "Allowed with Warning"
msgstr ""

msgid "Result"
msgstr ""

msgid "Title"
msgstr ""

msgid "Filename"
msgstr ""

#, python-format
msgid "Pages printed so far on %s"
msgstr ""

msgid "Account balance"
msgstr ""

msgid "Soft Limit"
msgstr ""

msgid "Hard Limit"
msgstr ""

msgid "Date Limit"
msgstr ""

msgid "Allowed range is (0..99)"
msgstr ""

#, python-format
msgid "Invalid 'savetoner' option %s : %s"
msgstr ""

#, python-format
msgid "Invalid 'pagesize' option %s, defaulting to A4."
msgstr ""

#, python-format
msgid ""
"pkbcodes v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"A billing codes Manager for PyKota.\n"
"\n"
"command line usage :\n"
"\n"
"  pkbcodes [options] code1 code2 code3 ... codeN\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints pkbcodes version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -a | --add           Adds billing codes if they don't exist in PyKota's\n"
"                       database. If they exist, they are modified\n"
"                       unless -s|--skipexisting is also used.\n"
"\n"
"  -d | --delete        Deletes billing codes from PyKota's database.\n"
"                       NB : the history entries with this billing code\n"
"                       are not deleted, voluntarily.\n"
"\n"
"  -D | --description d Adds a textual description to billing codes.\n"
"\n"
"  -l | --list          List informations about the billing codes.\n"
"\n"
"  -s | --reset         Resets the billing codes' balance and page counters\n"
"                       to 0.\n"
"\n"
"  -s | --skipexisting  In combination with the --add option above, tells\n"
"                       pkbcodes to not modify existing billing codes.\n"
"\n"
"  code1 through codeN can contain wildcards if the --add option\n"
"  is not set.\n"
"\n"
"examples :                              \n"
"\n"
"  $ pkbcodes --add -D \"My project\" myproj\n"
"\n"
"  Will create the myproj billing code with \"My project\"\n"
"  as the description.\n"
"\n"
"  $ pkbcodes --delete \"*\"\n"
"\n"
"  This will completely delete all the billing codes, but without\n"
"  removing any matching job from the history. USE WITH CARE ANYWAY !\n"
"  \n"
"  $ pkbcodes --list \"my*\"\n"
"  \n"
"  This will list all billing codes which name begins with 'my'.\n"
msgstr ""

#, python-format
msgid "Billing code [%s] already exists, skipping."
msgstr ""

#, python-format
msgid "Billing code [%s] already exists, will be modified."
msgstr ""

#, python-format
msgid "Impossible to add billingcode %s"
msgstr ""

#, python-format
msgid "There's no billingcode matching %s"
msgstr ""

msgid "pages"
msgstr ""

msgid "and"
msgstr ""

msgid "credits"
msgstr ""

msgid "You have to pass billing codes on the command line"
msgstr ""

#, python-format
msgid ""
"pkmail v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"Email gateway for PyKota.\n"
"\n"
"command line usage :\n"
"\n"
"  pkmail  [options]\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints pkmail's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"    \n"
"  This command is meant to be used from your mail server's aliases file,\n"
"  as a pipe. It will then accept commands send to it in email messages,\n"
"  and will send the answer to the command's originator.\n"
"  \n"
"  To use this command, create an email alias in /etc/aliases with\n"
"  the following format :\n"
"  \n"
"    pykotacmd: \"|/usr/bin/pkmail\"\n"
"    \n"
"  Then run the 'newaliases' command to regenerate the aliases database.\n"
"  \n"
"  You can now send commands by email to 'pykotacmd@yourdomain.com', with\n"
"  the command in the subject.\n"
"  \n"
"  List of supported commands :\n"
"  \n"
"        report [username]\n"
"  \n"
"  NB : For pkmail to work correctly, you may have to put the 'mail'\n"
"  system user in the 'pykota' system group to ensure this user can\n"
"  read the /etc/pykota/pykotadmin.conf file, and restart your\n"
"  mail server (e.g. /etc/init.d/exim restart). It is strongly advised\n"
"  that you think at least twice before doing this though.\n"
"  \n"
"  Use at your own risk !\n"
msgstr ""

#, python-format
msgid ""
"pkprinters v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"A Printers Manager for PyKota.\n"
"\n"
"command line usage :\n"
"\n"
"  pkprinters [options] printer1 printer2 printer3 ... printerN\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints pkprinters's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -a | --add           Adds printers if they don't exist on the Quota \n"
"                       Storage Server. If they exist, they are modified\n"
"                       unless -s|--skipexisting is also used.\n"
"                       \n"
"  -d | --delete        Deletes printers from the quota storage.\n"
"  \n"
"  -D | --description d Adds a textual description to printers.\n"
"                       \n"
"  -c | --charge p[,j]  Sets the price per page and per job to charge.\n"
"                       Job price is optional.\n"
"                       If both are to be set, separate them with a comma.\n"
"                       Floating point and negative values are allowed.\n"
"  \n"
"  -g | --groups pg1[,pg2...] Adds or Remove the printer(s) to the printer \n"
"                       groups pg1, pg2, etc... which must already exist.\n"
"                       A printer group is just like a normal printer,\n"
"                       only that it is usually unknown from the printing\n"
"                       system. Create printer groups exactly the same\n"
"                       way that you create printers, then add other \n"
"                       printers to them with this option.\n"
"                       Accounting is done on a printer and on all\n"
"                       the printer groups it belongs to, quota checking\n"
"                       is done on a printer and on all the printer groups\n"
"                       it belongs to.\n"
"                       If the --remove option below is not used, the \n"
"                       default action is to add printers to the specified\n"
"                       printer groups.\n"
"                       \n"
"  -l | --list          List informations about the printer(s) and the\n"
"                       printers groups it is a member of.\n"
"                       \n"
"  -r | --remove        In combination with the --groups option "
"above,                       \n"
"                       remove printers from the specified printers groups.\n"
"                       \n"
"  -s | --skipexisting  In combination with the --add option above, tells\n"
"                       pkprinters to not modify existing printers.\n"
"                       \n"
"  -m | --maxjobsize s  Sets the maximum job size allowed on the printer\n"
"                       to s pages.\n"
"                       \n"
"  -p | --passthrough   Activate passthrough mode for the printer. In this\n"
"                       mode, users are allowed to print without any impact\n"
"                       on their quota or account balance.\n"
"                       \n"
"  -n | --nopassthrough Deactivate passthrough mode for the printer.\n"
"                       Without -p or -n, printers are created in \n"
"                       normal mode, i.e. no passthrough.\n"
"  \n"
"  printer1 through printerN can contain wildcards if the --add option \n"
"  is not set.\n"
"  \n"
"examples :                              \n"
"\n"
"  $ pkprinters --add -D \"HP Printer\" --charge 0.05,0.1 hp2100 hp2200 "
"hp8000\n"
"  \n"
"  Will create three printers named hp2100, hp2200 and hp8000.\n"
"  Their price per page will be set at 0.05 unit, and their price\n"
"  per job will be set at 0.1 unit. Units are in your own currency,\n"
"  or whatever you want them to mean.\n"
"  All of their descriptions will be set to the string \"HP Printer\".\n"
"  If any of these printers already exists, it will also be modified \n"
"  unless the -s|--skipexisting command line option is also used.\n"
"            \n"
"  $ pkprinters --delete \"*\"\n"
"  \n"
"  This will completely delete all printers and associated quota "
"information,\n"
"  as well as their job history. USE WITH CARE !\n"
"  \n"
"  $ pkprinters --groups Laser,HP \"hp*\"\n"
"  \n"
"  This will put all printers which name matches \"hp*\" into printers "
"groups \n"
"  Laser and HP, which MUST already exist.\n"
"  \n"
"  $ pkprinters --groups LexMark --remove hp2200\n"
"  \n"
"  This will remove the hp2200 printer from the LexMark printer group.\n"
msgstr ""

#, python-format
msgid "Invalid maximum job size value %s"
msgstr ""

#, python-format
msgid "Printer %s already exists, skipping."
msgstr ""

#, python-format
msgid "Printer %s already exists, will be modified."
msgstr ""

msgid "in"
msgstr ""

#, python-format
msgid "Passthrough mode : %s"
msgstr ""

msgid "ON"
msgstr ""

msgid "OFF"
msgstr ""

#, python-format
msgid "Maximum job size : %s"
msgstr ""

#, python-format
msgid "%s pages"
msgstr ""

msgid "Unlimited"
msgstr ""

msgid "You have to pass printer groups names on the command line"
msgstr ""

msgid "You have to pass printer names on the command line"
msgstr ""

#, python-format
msgid ""
"pkturnkey v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"A turn key tool for PyKota. When launched, this command will initialize\n"
"PyKota's database with all existing print queues and some or all users.\n"
"For now, no prices or limits are set, so printing is fully accounted\n"
"for, but not limited. That's why you'll probably want to also use\n"
"edpykota once the database has been initialized.\n"
"\n"
"command line usage :\n"
"\n"
"  pkturnkey [options] [printqueues names]\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints pkturnkey version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -c | --doconf        Give hints about what to put into pykota.conf\n"
"  \n"
"  -d | --dousers       Manages users accounts as well.\n"
"  \n"
"  -D | --dogroups      Manages users groups as well.\n"
"                       Implies -d | --dousers.\n"
"  \n"
"  -e | --emptygroups   Includes empty groups.\n"
"  \n"
"  -f | --force         Modifies the database instead of printing what\n"
"                       it would do.\n"
"                       \n"
"  -u | --uidmin uid    Only adds users whose uid is greater than or equal "
"to\n"
"                       uid. You can pass an username there as well, and its\n"
"                       uid will be used automatically.\n"
"                       If not set, 0 will be used automatically.\n"
"                       Implies -d | --dousers.\n"
"                       \n"
"  -U | --uidmax uid    Only adds users whose uid is lesser than or equal to\n"
"                       uid. You can pass an username there as well, and its\n"
"                       uid will be used automatically.\n"
"                       If not set, a large value will be used "
"automatically.\n"
"                       Implies -d | --dousers.\n"
"\n"
"  -g | --gidmin gid    Only adds groups whose gid is greater than or equal "
"to\n"
"                       gid. You can pass a groupname there as well, and its\n"
"                       gid will be used automatically.\n"
"                       If not set, 0 will be used automatically.\n"
"                       Implies -D | --dogroups.\n"
"                       \n"
"  -G | --gidmax gid    Only adds groups whose gid is lesser than or equal "
"to\n"
"                       gid. You can pass a groupname there as well, and its\n"
"                       gid will be used automatically.\n"
"                       If not set, a large value will be used "
"automatically.\n"
"                       Implies -D | --dogroups.\n"
"\n"
"examples :                              \n"
"\n"
"  $ pkturnkey --dousers --uidmin jerome\n"
"\n"
"  Will simulate the initialization of PyKota's database will all existing\n"
"  printers and print accounts for all users whose uid is greater than\n"
"  or equal to jerome's one. Won't manage any users group.\n"
"  \n"
"  To REALLY initialize the database instead of simulating it, please\n"
"  use the -f | --force command line switch.\n"
"  \n"
"  You can limit the initialization to only a subset of the existing\n"
"  printers, by passing their names at the end of the command line.\n"
msgstr ""

#, python-format
msgid ""
"Printer %s is not managed by PyKota yet. Please modify printers.conf and "
"restart CUPS."
msgstr ""

msgid "Please be patient..."
msgstr ""

msgid "Don't worry, the database WILL NOT BE MODIFIED."
msgstr ""

msgid "Please WORRY NOW, the database WILL BE MODIFIED."
msgstr ""

msgid "System users will have a print account as well !"
msgstr ""

#, python-format
msgid "Unknown username %s : %s"
msgstr ""

msgid "System groups will have a print account as well !"
msgstr ""

#, python-format
msgid "Unknown groupname %s : %s"
msgstr ""

msgid "Simulation terminated."
msgstr ""

msgid "Database initialized !"
msgstr ""

msgid "The --uidmin or --uidmax command line option implies --dousers as well."
msgstr ""

msgid ""
"The --gidmin or --gidmax command line option implies --dogroups as well."
msgstr ""

msgid "The --dogroups command line option implies --dousers as well."
msgstr ""

#, python-format
msgid ""
"pykosd v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"An OSD quota monitor for PyKota.\n"
"\n"
"command line usage :\n"
"\n"
"  pykosd [options]\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints pykosd's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -c | --color #rrggbb Sets the color to use for display as an hexadecimal\n"
"                       triplet, for example #FF0000 is 100%% red.\n"
"                       Defaults to 100%% green (#00FF00).\n"
"                       \n"
"  -d | --duration d    Sets the duration of the display in seconds. \n"
"                       Defaults to 3 seconds.\n"
"                       \n"
"  -f | --font f        Sets the font to use for "
"display.                      \n"
"                       Defaults to the Python OSD library's default.\n"
"  \n"
"  -l | --loop n        Sets the number of times the info will be displayed.\n"
"                       Defaults to 0, which means loop forever.\n"
"                       \n"
"  -s | --sleep s       Sets the sleeping duration between two displays \n"
"                       in seconds. Defaults to 180 seconds (3 minutes).\n"
"                       \n"
"  \n"
"examples :                              \n"
"\n"
"  $ pykosd -s 60 --loop 5\n"
"  \n"
"  Will launch pykosd. Display will be refreshed every 60 seconds,\n"
"  and will last for 3 seconds (the default) each time. After five\n"
"  iterations, the program will exit.\n"
msgstr ""

#, python-format
msgid "Invalid duration option %s"
msgstr ""

#, python-format
msgid "Invalid loop option %s"
msgstr ""

#, python-format
msgid "Invalid sleep option %s"
msgstr ""

#, python-format
msgid "Invalid color option %s"
msgstr ""

#, python-format
msgid "User %s doesn't exist in PyKota's database"
msgstr ""

#, python-format
msgid "Pages used on %s : %s"
msgstr ""

#, python-format
msgid "PyKota Units left : %.2f"
msgstr ""

#, python-format
msgid ""
"pykotme v%(__version__)s (c) %(__years__)s %(__author__)s\n"
"\n"
"Gives print quotes to users.\n"
"\n"
"command line usage :\n"
"\n"
"  pykotme  [options]  [files]\n"
"\n"
"options :\n"
"\n"
"  -v | --version       Prints pykotme's version number then exits.\n"
"  -h | --help          Prints this message then exits.\n"
"  \n"
"  -P | --printer p     Gives a quote for this printer only. Actually p can\n"
"                       use wildcards characters to select only\n"
"                       some printers. The default value is *, meaning\n"
"                       all printers.\n"
"                       You can specify several names or wildcards, \n"
"                       by separating them with commas.\n"
"  \n"
"examples :                              \n"
"\n"
"  $ pykotme --printer apple file1.ps file2.ps\n"
"  \n"
"  This will give a print quote to the current user. The quote will show\n"
"  the price and size of a job consisting in file1.ps and file2.ps \n"
"  which would be sent to the apple printer.\n"
"  \n"
"  $ pykotme --printer apple,hplaser <file1.ps\n"
"  \n"
"  This will give a print quote to the current user. The quote will show\n"
"  the price and size of a job consisting in file1.ps as read from\n"
"  standard input, which would be sent to the apple or hplaser\n"
"  printer.\n"
"\n"
"  $ pykotme \n"
"  \n"
"  This will give a quote for a job consisting of what is on standard \n"
"  input. The quote will list the job size, and the price the job\n"
"  would cost on each printer.\n"
msgstr ""

#, python-format
msgid "Your account balance : %.2f"
msgstr ""

#, python-format
msgid "Job size : %i pages"
msgstr ""

#, python-format
msgid "Cost on printer %s : %.2f"
msgstr ""

msgid "PyKota Data Dumper"
msgstr ""

msgid "Dump"
msgstr ""

msgid "Please click on the above button"
msgstr ""

msgid "Data Type"
msgstr ""

msgid "Output Format"
msgstr ""

msgid "Filter"
msgstr ""

msgid "Summarize"
msgstr ""

msgid "only for payments or history"
msgstr ""

msgid "PyKota Reports"
msgstr ""

msgid "Report"
msgstr ""

msgid "Printer"
msgstr ""

msgid "User / Group names mask"
msgstr ""

msgid "Groups report"
msgstr ""

msgid "History"
msgstr ""

msgid "Empty"
msgstr ""

msgid "Action"
msgstr ""

msgid "User"
msgstr ""

msgid "Hostname"
msgstr ""

msgid "JobId"
msgstr ""

msgid "Number of pages"
msgstr ""

msgid "Cost"
msgstr ""

msgid "Copies"
msgstr ""

msgid "Number of bytes"
msgstr ""

msgid "Printer's internal counter"
msgstr ""

msgid "Options"
msgstr ""

msgid "MD5Sum"
msgstr ""

msgid "Billing code"
msgstr ""

msgid "Precomputed number of pages"
msgstr ""

msgid "Precomputed cost"
msgstr ""

msgid "Pages details"
msgstr ""

msgid "(not supported yet)"
msgstr ""

msgid "Previous page"
msgstr ""

msgid "PyKota Quotes"
msgstr ""

msgid "Quote"
msgstr ""

msgid ""
"The exact cost of a print job can only be determined for a particular user. "
"Please retry while logged-in."
msgstr ""

#, python-format
msgid "Unsupported accounter backend %s"
msgstr ""

#, python-format
msgid ""
"Configuration file %s can't be read. Please check that the file exists and "
"that your permissions are sufficient."
msgstr ""

#, python-format
msgid "Configuration file %s not found."
msgstr ""

#, python-format
msgid "Option %s not found in section global of %s"
msgstr ""

#, python-format
msgid "Option %s not found in section %s of %s"
msgstr ""

#, python-format
msgid "Option ldaptls is set, but certificate %s is not readable."
msgstr ""

#, python-format
msgid "Option logger only supports values in %s"
msgstr ""

#, python-format
msgid "Invalid accounter %s for printer %s"
msgstr ""

#, python-format
msgid "Option accounter in section %s only supports values in %s"
msgstr ""

#, python-format
msgid "Invalid unknown_billingcode directive %s for printer %s"
msgstr ""

#, python-format
msgid "Directive unknown_billingcode in section %s only supports values in %s"
msgstr ""

#, python-format
msgid "Option enforcement in section %s only supports values in %s"
msgstr ""

#, python-format
msgid "Option onaccountererror in section %s only supports values in %s"
msgstr ""

#, python-format
msgid "Option policy in section %s only supports values in %s"
msgstr ""

#, python-format
msgid "Invalid option mailto %s for printer %s"
msgstr ""

#, python-format
msgid "Option mailto in section %s only supports values in %s"
msgstr ""

#, python-format
msgid "Invalid maximal deny banners counter %s"
msgstr ""

#, python-format
msgid "Invalid grace delay %s"
msgstr ""

#, python-format
msgid "Invalid poor man's threshold %s"
msgstr ""

msgid ""
"Your Print Quota account balance is Low.\n"
"Soon you'll not be allowed to print anymore.\n"
"Please contact the Print Quota Administrator to solve the problem."
msgstr ""

#, python-format
msgid ""
"You are not allowed to print anymore because\n"
"your Print Quota is exceeded on printer %s."
msgstr ""

#, python-format
msgid ""
"You will soon be forbidden to print anymore because\n"
"your Print Quota is almost reached on printer %s."
msgstr ""

#, python-format
msgid "Option accountbanner in section %s only supports values in %s"
msgstr ""

#, python-format
msgid "Option trustjobsize for printer %s is incorrect"
msgstr ""

msgid "Users"
msgstr ""

msgid "Groups"
msgstr ""

msgid "Printers"
msgstr ""

msgid "Users Print Quotas"
msgstr ""

msgid "Users Groups Print Quotas"
msgstr ""

msgid "History of Payments"
msgstr ""

msgid "Printers Groups Membership"
msgstr ""

msgid "Users Groups Membership"
msgstr ""

msgid "Billing Codes"
msgstr ""

msgid "Comma Separated Values"
msgstr ""

msgid "Semicolon Separated Values"
msgstr ""

msgid "Tabulation Separated Values"
msgstr ""

msgid "eXtensible Markup Language"
msgstr ""

msgid "CUPS' page_log"
msgstr ""

#, python-format
msgid "Invalid filter value [%s], see help."
msgstr ""

#, python-format
msgid "Invalid modifier [%s] for --data command line option, see help."
msgstr ""

#, python-format
msgid "Invalid modifier [%s] for --format command line option, see help."
msgstr ""

msgid "XML output is disabled because the jaxml module is not available."
msgstr ""

#, python-format
msgid "Invalid data type [%s] for --sum command line option, see help."
msgstr ""

msgid "PyKota data dumper failed : I/O error"
msgstr ""

#, python-format
msgid "Unsupported logging subsystem %s"
msgstr ""

#, python-format
msgid "Report for %s quota on printer %s"
msgstr ""

#, python-format
msgid "Pages grace time: %i days"
msgstr ""

#, python-format
msgid "Price per job: %.3f"
msgstr ""

#, python-format
msgid "Price per page: %.3f"
msgstr ""

msgid ""
"Group          overcharge   used    soft    hard    balance grace         "
"total       paid warn"
msgstr ""

msgid ""
"User           overcharge   used    soft    hard    balance grace         "
"total       paid warn"
msgstr ""

msgid "unknown"
msgstr ""

#, python-format
msgid "Real : %s"
msgstr ""

#, python-format
msgid "Total : %9i"
msgstr ""

msgid "N/A"
msgstr ""

#, python-format
msgid "Unsupported reporter backend %s"
msgstr ""

#, python-format
msgid "Unsupported quota storage backend %s"
msgstr ""

#, python-format
msgid "Strange problem with uid(%s) : %s"
msgstr ""

#, python-format
msgid "Running as user '%s'."
msgstr ""

msgid "No user named 'pykota'. Not dropping priviledges."
msgstr ""

#, python-format
msgid "Impossible to drop priviledges : %s"
msgstr ""

msgid "Priviledges dropped. Now running as user 'pykota'."
msgstr ""

#, python-format
msgid "Impossible to regain priviledges : %s"
msgstr ""

msgid "Regained priviledges. Now running as root."
msgstr ""

msgid "Please report bugs to :"
msgstr ""

#, python-format
msgid ""
"\n"
"\n"
"Please contact your system administrator :\n"
"\n"
"\t%s - <%s>\n"
msgstr ""

#, python-format
msgid "Unable to match user %s on printer %s, applying default policy (%s)"
msgstr ""

#, python-format
msgid ""
"Unable to find user %s's account balance, applying default policy (%s) for "
"printer %s"
msgstr ""

#, python-format
msgid "User %s will not be charged for printing."
msgstr ""

#, python-format
msgid "Print Quota exceeded for group %s on printer %s"
msgstr ""

msgid "Print Quota Exceeded"
msgstr ""

#, python-format
msgid "Print Quota low for group %s on printer %s"
msgstr ""

msgid "Print Quota Low"
msgstr ""

#, python-format
msgid "A problem occured while reading printer %s's internal page counter."
msgstr ""

#, python-format
msgid "Retrieving printer %s's page counter from database instead."
msgstr ""

#, python-format
msgid ""
"Couldn't retrieve printer %s's internal page counter either before or after "
"printing."
msgstr ""

#, python-format
msgid "Job's size forced to 1 page for printer %s."
msgstr ""

#, python-format
msgid "No previous job in database for printer %s."
msgstr ""

#, python-format
msgid "Inconsistent values for printer %s's internal page counter."
msgstr ""

#, python-format
msgid "Unknown printer address in HARDWARE(%s) for printer %s"
msgstr ""

#, python-format
msgid "Launching HARDWARE(%s)..."
msgstr ""

#, python-format
msgid "SIGTERM was sent to hardware accounter %s (pid: %s)"
msgstr ""

#, python-format
msgid "Line [%s] skipped in accounter's output. Trying again..."
msgstr ""

#, python-format
msgid "Hardware accounter %s exit code is %s"
msgstr ""

#, python-format
msgid "Unable to query printer %s via HARDWARE(%s)"
msgstr ""

#, python-format
msgid "Problem during connection to %s:%s : %s"
msgstr ""

#, python-format
msgid "Problem while sending PJL query to %s:%s : %s"
msgstr ""

#, python-format
msgid "Problem while receiving PJL answer from %s:%s : %s"
msgstr ""

#, python-format
msgid "Waiting for printer %s to be printing..."
msgstr ""

#, python-format
msgid "Waiting for printer %s's idle status to stabilize..."
msgstr ""

#, python-format
msgid ""
"PJL querying stage interrupted. Using latest value seen for internal page "
"counter (%s) on printer %s."
msgstr ""

#, python-format
msgid "Network error while doing SNMP queries on printer %s : %s"
msgstr ""

#, python-format
msgid "SNMP message decoding error for printer %s : %s"
msgstr ""

#, python-format
msgid "Problem encountered while doing SNMP queries on printer %s : %s"
msgstr ""

#, python-format
msgid ""
"SNMP querying stage interrupted. Using latest value seen for internal page "
"counter (%s) on printer %s."
msgstr ""

#, python-format
msgid "Launching SOFTWARE(%s)..."
msgstr ""

#, python-format
msgid "Unable to compute job size with accounter %s"
msgstr ""

#, python-format
msgid "Problem while waiting for software accounter pid %s to exit : %s"
msgstr ""

#, python-format
msgid "Software accounter %s exit code is %s"
msgstr ""

msgid "Totals may be inaccurate if some users are members of several groups."
msgstr ""

#, python-format
msgid ""
"Search base %s doesn't seem to exist. Probable misconfiguration. Please "
"double check /etc/pykota/pykota.conf : %s"
msgstr ""

#, python-format
msgid "Search for %s(%s) from %s(scope=%s) returned no answer."
msgstr ""

#, python-format
msgid "Problem adding LDAP entry (%s, %s)"
msgstr ""

#, python-format
msgid "Problem deleting LDAP entry (%s)"
msgstr ""

#, python-format
msgid "Problem modifying LDAP entry (%s, %s)"
msgstr ""

#, python-format
msgid ""
"No pykotaAccountBalance object found for user %s. Did you create LDAP "
"entries manually ?"
msgstr ""

msgid "Hidden because of privacy concerns"
msgstr ""

#, python-format
msgid ""
"Unable to find an existing objectClass %s entry with %s=%s to attach "
"pykotaAccount objectClass"
msgstr ""

#, python-format
msgid "%s. A new entry will be created instead."
msgstr ""

#, python-format
msgid "Unable to find an existing entry to attach pykotaGroup objectclass %s"
msgstr ""

msgid "ALLOW"
msgstr ""

msgid "WARN"
msgstr ""

msgid "DENY"
msgstr ""

